class Solution {
    public String shortestCommonSupersequence(String str1, String str2) {
        
        int m = str1.length();
        int n = str2.length();
        int[][] dp= new int[m+1][n+1];

        for(int i=0;i<=m;i++){
                 for(int j=0;j<=n;j++){
                
                        if(i==0 || j==0) dp[i][j] = 0;

                
                        else if(str1.charAt(i-1) == str2.charAt(j-1)){
                    
                             dp[i][j] = 1 + dp[i-1][j-1];
                        }

                        else {
                            dp[i][j] = Math.max(dp[i-1][j] , dp[i][j-1]) ;
                        }
                    }
             }
             
             
             String res = "";

            int i = m; 
            int j = n;

            while(i>0 && j>0){

                    if(str1.charAt(i-1) == str2.charAt(j-1)) {
                        res += str1.charAt(i-1) ;
                        i--; j--;
                    }

                    else{
 
                        if(dp[i][j-1] > dp[i-1][j]) { res += str2.charAt(j-1) ;j--; }
                        else  { res += str1.charAt(i-1) ;i--; }
                    }

            }
        
            while(i>0){ res += str1.charAt(i-1) ; i--; }
            while(j>0){ res += str2.charAt(j-1) ; j--;  }
        
            String k = "";
            for(int h=res.length()-1;h>=0;h--) k += res.charAt(h);

            
           return k; 
        
        
        
    }
}
