

class Solution {

    public boolean canPartition(int[] nums) {
        
        int sum = 0;
        for(int i=0;i<nums.length;i++){
            sum += nums[i];
        }
        boolean ans = false;
        if(sum%2 == 0){ans = subsetsum(nums,sum/2, nums.length); }
       
        return ans;
        
    }
    
   
    
    public boolean subsetsum(int[] w , int c, int n){
        
        boolean[][] dp= new boolean[c+1][n+1];
        

        for(int i=0;i<=c;i++){
            for(int j=0;j<=n;j++){
               
               if(i==0 || j==0){
                if(j==0) dp[i][j] = false;
                if(i==0 ) dp[i][j] = true;
               }
             
                
                else if(w[j-1] <= i){
                    
                    dp[i][j] = 

                         dp[i- w[j-1]][j-1] || dp[i][j-1] ;
                   
                    
                }

                else if(w[j-1] > i) { dp[i][j] = dp[i][j-1] ; 
                   
                }
           
         
            }
            
            
        }
        
         return dp[c][n] ;

       
        
    } 
}
