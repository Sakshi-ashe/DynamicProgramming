import java.io.*;
import java.lang.Math;
import java.util.*;

class GFG {

    public static void main(String args[] ) throws Exception {
        try{

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
       
       int t = Integer.parseInt(br.readLine());
       while(t>0){
       
          int n= Integer.parseInt(br.readLine());
       
            
      
          StringTokenizer stA  =new StringTokenizer(br.readLine());


          int Range = 0; 
       
    	    int []B = new int[n];

   	     for(int i=0;i<n;i++){
           
         		  B[i] = Integer.parseInt(stA.nextToken());
    	      	 Range += B[i];
           
      	  }
       
          int half = (Range)/2;
          boolean[][] dp= new boolean[half+1][n+1];
        
        	for(int i=0;i<=half;i++){
          		  for(int j=0;j<=n;j++){
           			    if(i==0 || j==0){
            				    if(j==0) dp[i][j] = false; // no of elements = 0
           				     if(i==0 ) dp[i][j] = true; //sum = 0;
         			      }
             

                else{
             				   if(B[j-1] <= i){
                    
                 				   dp[i][j] =    (dp[i- B[j-1]][j-1] || dp[i][j-1] ) ;

                    
                			}

              				  else { dp[i][j] = dp[i][j-1] ; }
               		 }
            }
        }
        

        int flag=0;
        for(int i=half;i>=0;i-- ){
           
              if(dp[i][n])
                {flag = (Range - 2*(i));
              
                  break;
               
                }
           
           
       }
       
       
       
       System.out.println(flag);
  
           
           t--;
       }
        }
        catch(Exception e){return ;}
    }  
}
